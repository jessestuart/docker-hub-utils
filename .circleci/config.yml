# version: 2.1
version: 2.0

# ====================
# WORKFLOW DECLARATION
# ====================
workflows:
  version: 2
  main:
    jobs:
      - install_dependencies
      - build:
          requires:
            - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - release:
          requires:
            - build
            - lint
            - test
          filters:
            branches:
              only:
                - master

# ====================
# ALIASES
# ====================
docker_image: &docker_image
  docker:
    - image: node:12
  working_directory: /root/docker-hub-utils/

restore_cache: &restore_cache
  restore_cache:
    keys:
      - dependencies-v1-{{ checksum "yarn.lock" }}
      - dependencies-v1

save_cache: &save_cache
  save_cache:
    paths:
      - node_modules/
      - ~/.cache/yarn/
    key: dependencies-v1-{{ checksum "yarn.lock" }}

install_dependencies: &install_dependencies
  run:
    name: Install dependencies.
    command: yarn --silent --no-progress --frozen-lockfile

# ================
# JOB DECLARATIONS
# ================
jobs:
  install_dependencies:
    <<: *docker_image
    steps:
      - checkout
      - *restore_cache
      - *install_dependencies
      - *save_cache

  lint:
    <<: *docker_image
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Run linter.
          command: yarn lint

  test:
    <<: *docker_image
    steps:
      - checkout
      - *restore_cache
      - run: mkdir -p /root/docker-hub-utils/reports/junit/
      - run:
          name: Run jest test suite & upload results.
          command: yarn ci && yarn codecov
          environment:
            JEST_JUNIT_OUTPUT_DIR: 'reports/junit/'
            JEST_JUNIT_OUTPUT_NAME: 'js-test-results.xml'
      - store_test_results:
          path: reports/junit/
      - store_artifacts:
          path: reports/junit/

  build:
    <<: *docker_image
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Transpile sources.
          command: yarn rebuild

  release:
    <<: *docker_image
    steps:
      - checkout
      - *restore_cache
      - run: yarn release
